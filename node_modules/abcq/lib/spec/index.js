'use strict';

var _chai = require('chai');

var _ = require('..');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global describe, it */

describe('ABCQ', function () {
  it('should throw an error if called as a function', function () {
    (0, _chai.expect)(_2.default).to.throw(Error);
    (0, _chai.expect)(_2.default).to.throw(TypeError);
    (0, _chai.expect)(_2.default).to.throw(TypeError, /Cannot call a class as a function/);
  });

  it('can have multiple instances', function () {
    var a1 = new _2.default();
    var a2 = new _2.default();
    var check1 = a1.generate();
    var check2 = a2.generate();
    (0, _chai.expect)(check1).to.equal(check2);
  });

  describe('generate', function () {
    var abc = new _2.default();
    it('should start with "a"', function () {
      var check = abc.generate();
      (0, _chai.expect)(check).to.equal('a');
    });
    it('should continue with "b"', function () {
      var check = abc.generate();
      (0, _chai.expect)(check).to.equal('b');
    });
  });

  describe('encode', function () {
    var abc = new _2.default();
    it('should encode 0 to "a"', function () {
      var check = abc.encode(0);
      (0, _chai.expect)(check).to.equal('a');
    });
    it('should encode 1 to "b"', function () {
      var check = abc.encode(1);
      (0, _chai.expect)(check).to.equal('b');
    });
    it('should encode 51 to "Z"', function () {
      var check = abc.encode(51);
      (0, _chai.expect)(check).to.equal('Z');
    });
    it('should encode 52 to "aa"', function () {
      var check = abc.encode(52);
      (0, _chai.expect)(check).to.equal('aa');
    });
    it('should encode 19854 to "gqQ"', function () {
      var check = abc.encode(19854);
      (0, _chai.expect)(check).to.equal('gqQ');
    });
    it('should return null for -1', function () {
      var check = abc.encode(-1);
      (0, _chai.expect)(check).to.equal(null);
    });
  });

  describe('decode', function () {
    var abc = new _2.default();
    it('should decode "a" to 0', function () {
      var check = abc.decode('a');
      (0, _chai.expect)(check).to.equal(0);
    });
    it('should decode "b" to 1', function () {
      var check = abc.decode('b');
      (0, _chai.expect)(check).to.equal(1);
    });
    it('should decode "Z" to 51', function () {
      var check = abc.decode('Z');
      (0, _chai.expect)(check).to.equal(51);
    });
    it('should decode "aa" to 52', function () {
      var check = abc.decode('aa');
      (0, _chai.expect)(check).to.equal(52);
    });
    it('should decode "gqQ" to 19854', function () {
      var check = abc.decode('gqQ');
      (0, _chai.expect)(check).to.equal(19854);
    });
    it('should return null for "-"', function () {
      var check = abc.decode('-');
      (0, _chai.expect)(check).to.equal(null);
    });
    it('should return null for "_"', function () {
      var check = abc.decode('_');
      (0, _chai.expect)(check).to.equal(null);
    });
  });

  describe('options', function () {
    describe('chars', function () {
      var abc = new _2.default({
        chars: 'ab'
      });
      it('should allow to set chars', function () {
        var check = abc.chars;
        (0, _chai.expect)(check).to.equal('ab');
      });
      it('should decode "a" to 0', function () {
        var check = abc.decode('a');
        (0, _chai.expect)(check).to.equal(0);
      });
      it('should decode "b" to 1', function () {
        var check = abc.decode('b');
        (0, _chai.expect)(check).to.equal(1);
      });
      it('should decode "babab" to 51', function () {
        var check = abc.decode('babab');
        (0, _chai.expect)(check).to.equal(51);
      });
      it('should decode "babba" to 52', function () {
        var check = abc.decode('babba');
        (0, _chai.expect)(check).to.equal(52);
      });
      it('should decode "aabbabbaabaaaa" to 19854', function () {
        var check = abc.decode('aabbabbaabaaaa');
        (0, _chai.expect)(check).to.equal(19854);
      });
    });

    describe('counter', function () {
      var abc = new _2.default({
        counter: 1
      });
      it('should allow to set the counter', function () {
        var check = abc.counter;
        (0, _chai.expect)(check).to.equal(1);
      });
      it('should start generate at "c"', function () {
        var check = abc.generate();
        (0, _chai.expect)(check).to.equal('c');
      });
      it('should continue generate at "d"', function () {
        var check = abc.generate();
        (0, _chai.expect)(check).to.equal('d');
      });
      it('should encode 19854 to "gqQ"', function () {
        var check = abc.encode(19854);
        (0, _chai.expect)(check).to.equal('gqQ');
      });
      it('should decode "gqQ" to 19854', function () {
        var check = abc.decode('gqQ');
        (0, _chai.expect)(check).to.equal(19854);
      });
    });
  });
});