{"version":3,"sources":["../src/get-invalid-attributes.js"],"names":["props","elementAttributes","tag","validAttributes","Object","keys","filter","indexOf","prop","substring"],"mappings":";;;;;;kBAGe,UAAUA,KAAV,EAAiB;AAC9B,MAAMC,oBAAoB,qBAAeD,MAAME,GAArB,KAA6B,EAAvD;AACA,MAAMC,+CAAsB,qBAAe,GAAf,CAAtB,sBAA8CF,iBAA9C,EAAN;AACA,SAAOG,OAAOC,IAAP,CAAYL,KAAZ;AACL;AADK,GAEJM,MAFI,CAEG;AAAA,WAAQH,gBAAgBI,OAAhB,CAAwBC,IAAxB,IAAgC,CAAhC,IAAqC,CAAC,uBAAWA,IAAX,CAA9C;AAAA,GAFH;AAGL;AAHK,GAIJF,MAJI,CAIG;AAAA,WAAQ,qBAASE,KAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAT,EAA+B,CAAC,OAAD,EAAU,OAAV,CAA/B,CAAR;AAAA,GAJH,CAAP;AAKD,C;;AAXD;;AACA","file":"get-invalid-attributes.js","sourcesContent":["import {isListener, isTruthy} from '@stiligita/utils'\nimport htmlAttributes from './attributes'\n\nexport default function (props) {\n  const elementAttributes = htmlAttributes[props.tag] || []\n  const validAttributes = [...htmlAttributes['*'], ...elementAttributes]\n  return Object.keys(props)\n    // Keep anything that is invalid\n    .filter(prop => validAttributes.indexOf(prop) < 0 && !isListener(prop))\n    // Remove data and aria attributes\n    .filter(prop => isTruthy(prop.substring(0, 5), ['data-', 'aria-']))\n}\n"]}