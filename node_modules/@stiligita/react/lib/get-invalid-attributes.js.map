{"version":3,"sources":["../src/get-invalid-attributes.js"],"names":["props","elementAttributes","tag","push","svg","validAttributes","Object","keys","filter","indexOf","prop","substring"],"mappings":";;;;;;kBAIe,UAAUA,KAAV,EAAiB;AAC9B,MAAMC,oBAAoB,4BAAeD,MAAME,GAArB,KAA6B,EAAvD;AACA;AACA,MAAI,oBAAQF,MAAME,GAAd,2BAAJ,EAAqC;AACnCD,sBAAkBE,IAAlB,6CAA0B,4BAAeC,GAAzC;AACD;AACD,MAAMC,+CAAsB,4BAAe,GAAf,CAAtB,sBAA8CJ,iBAA9C,IAAiE,UAAjE,EAAN;AACA,SAAOK,OAAOC,IAAP,CAAYP,KAAZ;AACL;AADK,GAEJQ,MAFI,CAEG;AAAA,WAAQH,gBAAgBI,OAAhB,CAAwBC,IAAxB,IAAgC,CAAhC,IAAqC,CAAC,wBAAWA,IAAX,CAA9C;AAAA,GAFH;AAGL;AAHK,GAIJF,MAJI,CAIG;AAAA,WAAQ,qBAASE,KAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAT,EAA+B,CAAC,OAAD,EAAU,OAAV,CAA/B,CAAR;AAAA,GAJH,CAAP;AAKD,C;;AAhBD;;AACA;;AACA","file":"get-invalid-attributes.js","sourcesContent":["import {isTruthy, isFalsy} from '@stiligita/utils'\nimport {htmlAttributes, svgElements} from './dom-elements'\nimport {isListener} from './utils'\n\nexport default function (props) {\n  const elementAttributes = htmlAttributes[props.tag] || []\n  // Check for svg elements and add valid svg attributes\n  if (isFalsy(props.tag, svgElements)) {\n    elementAttributes.push(...htmlAttributes.svg)\n  }\n  const validAttributes = [...htmlAttributes['*'], ...elementAttributes, 'children']\n  return Object.keys(props)\n    // Keep anything that is invalid\n    .filter(prop => validAttributes.indexOf(prop) < 0 && !isListener(prop))\n    // Remove data and aria attributes\n    .filter(prop => isTruthy(prop.substring(0, 5), ['data-', 'aria-']))\n}\n"]}